# Author: falmeida@google.com (Filipe Almeida)

name = 'htmlparser'

comment = 'Definition of a finite state machine for a subset of HTTP 4.1'

states = [
#   internal state         external state
    ('text',                'text'),
    ('tag_start',           'tag'),
    ('tag_name',            'tag'),
    ('tag_space',           'tag'),
    ('tag_close',           'text'),
    ('attr',                'attr'),
    ('attr_space',          'attr'),
    ('value',               'value'),
    ('value_text',          'value'),
    ('value_q',             'value'),
    ('value_dq',            'value'),
    ('comment',             'comment'),
    ('comment_open',        'comment'),
    ('comment_in',          'comment'),
    ('comment_close',       'comment'),

    ('js_text',             'text'),
    ('js_comment',          'text'),
    ('js_comment_open',     'text'),
    ('js_comment_in',       'text'),
    ('js_comment_close',    'text'),
    ('js_lt',               'text'),

    ('js_file',             'js_file'),
    ('css_file',            'css_file'),

    ('null',                'text')
]

conditions = [
    ('<',       '<'),
    ('>',       '>'),
    ('=',       '='),

# There are small diferences between the next few conditions.
# TODO(falmeida): Verify what are the conditions the major browsers use here.
    ('id',      'A-Za-z0-9_:-'),
    ('idtag',   'A-Za-z0-9/_?:-'),
    ('value',   'A-Za-z0-9:#/%.-?'),
    ('space',   ' \\t\\n\\r?'),
    ('!',       '!'),
    ('q',       '\\\''),
    ('dq',      '\\"'),
    ('/',       '/'),
    ('*',       '*'),
    ('-',       '-'),
    ('lf',      '\n'),
    ('quote',   '\\\\'),
    ('default', '[:default:]')
]

transitions = [

#   condition  origin state            target state
# text
    ('<',       'text',                 'tag_start'),
    ('default', 'text',                 'text'),

# tag_start
    ('idtag',   'tag_start',            'tag_name'),
    ('!',       'tag_start',            'comment'),
# TODO(falmeida): Add a default that goes back to html so we can have loose '>'
# characters in the file.

# tag_name
    ('idtag',   'tag_name',             'tag_name'), 
    ('space',   'tag_name',             'tag_space'),
    ('>',       'tag_name',             'tag_close'),

# comment
    ('-',       'comment',              'comment_open'),
    ('>',       'comment',              'text'),
    ('default', 'comment',              'comment'),

# comment_open
    ('-',       'comment_open',         'comment_in'),
    ('>',       'comment_open',         'text'),
    ('default', 'comment_open',         'comment'),

# comment_in
    ('-',       'comment_in',           'comment_close'),
    ('default', 'comment_in',           'comment_in'),

# comment_close
    ('-',       'comment_close',        'comment'),
    ('default', 'comment_close',        'comment_in'),

# tag_space
    ('>',       'tag_space',            'tag_close'),
    ('space',   'tag_space',            'tag_space'),
    ('id',      'tag_space',            'attr'),
    ('/',       'tag_space',            'tag_space'),

# tag_close
    ('<',       'tag_close',            'tag_start'),
    ('default', 'tag_close',            'text'),

# attr
    ('id',      'attr',                 'attr'),
    ('>',       'attr',                 'tag_close'),
    ('/',       'attr',                 'tag_space'),
    ('=',       'attr',                 'value'),
    ('space',   'attr',                 'attr_space'),

# attr_space
    ('>',       'attr_space',           'tag_close'),
    ('space',   'attr_space',           'attr_space'),
    ('id',      'attr_space',           'attr'),
    ('/',       'attr_space',           'tag_space'),
    ('=',       'attr_space',           'value'),

# value
    ('q',       'value',                'value_q'),
    ('dq',      'value',                'value_dq'),
    ('space',   'value',                'value'),
    ('>',       'value',                'tag_close'),
    ('default', 'value',                'value_text'),

# value_text
    ('>',       'value_text',           'tag_close'),
    ('space',   'value_text',           'tag_space'),
    ('default', 'value_text',           'value_text'),

# value_q
    ('q',       'value_q',              'tag_space'),
    ('default', 'value_q',              'value_q'),

# value_dq
    ('dq',      'value_dq',             'tag_space'),
    ('default', 'value_dq',             'value_dq'),


# TODO(falmeida): These should be renamed from js_ to cdata_

# js_common
    ('-',       'js_comment',              'js_comment_open'),
    ('>',       'js_comment',              'js_text'),
    ('default', 'js_comment',              'js_comment'),

# js_comment_open
    ('-',       'js_comment_open',         'js_comment_in'),
    ('>',       'js_comment_open',         'js_text'),
    ('default', 'js_comment_open',         'js_comment'),

# js_comment_in
    ('-',       'js_comment_in',           'js_comment_close'),
    ('default', 'js_comment_in',           'js_comment_in'),

# js_comment_close
    ('-',       'js_comment_close',        'js_comment'),
    ('default', 'js_comment_close',        'js_comment_in'),

# js_text
    ('<',       'js_text',              'js_lt'),
    ('default', 'js_text',              'js_text'),

# js_lt
    ('/',       'js_lt',                'tag_name'),
    ('!',       'js_lt',                'js_comment'),
    ('default', 'js_lt',                'js_text'),

# the next states are used for specialized parser modes
# js_file
    ('default', 'js_file',              'js_file'),

# css_file
    ('default', 'css_file',              'css_file'),

# null
    ('default', 'null',                 'null')
]
